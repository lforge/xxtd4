<!DOCTYPE html>
<html lang="en">
    <head>
        <title><%= title %></title>
        <%- stylesheet_link_tag('bootstrap', 'style', 'bootstrap-responsive', 'bootstrap.min', 'ui-lightness/jquery-ui-1.8.18.custom') %>
        <%- javascript_include_tag('jquery-1.7.1.min', 'jquery-ui-1.8.18.custom.min', 'bootstrap', 'rails', 'application', 'bootstrap-dropdown', 'bootstrap-modal', 'jquery.maskedinput-1.3.min', 'jquery-ui-timepicker-addon') %>
        <%- csrf_meta_tag() %>
    </head>
    <body>

      <%- partial('menu.ejs') %>
            
        <div class="container">
            <% var flash = request.flash('info').pop(); if (flash) { %>
                <div class="alert alert-info">
                    <a class="close" data-dismiss="alert">×</a>
                    <%- flash %>
                </div>
            <% } %>
            
            <% flash = request.flash('error').pop(); if (flash) { %>
                <div class="alert alert-error">
                    <a class="close" data-dismiss="alert">×</a>
                    <%- flash %>
                </div>
            <% }; %>
            
            <%- body %>
<script>
    // Activate the bootsrap dropdown JQuery plug-in.
    $(document).ready(function () {
        $(".dropdown-toggle").dropdown();
    });

    // Activate the JQuery date picker.
    $(function() {
		  $("#event_type_cutoff_date_pick").datepicker({
        altField: "#Event_event_type_cutoff_date"
       ,altFormat: "@"
      });
    });

    // Activate the Trent Richardson Date/Time picker.
    $('#event_start_time_pick').datetimepicker();
    $('#event_check_in_time_pick').datetimepicker();

    // Utility function that will parse a string of time in the format of 'mm/dd/yyyy hh:mi' to return
    // Unix epoch string.
    function parse_datetime(str_datetime) {
      var v_year = str_datetime.substr(6, 4) - 0;
      var v_month = str_datetime.substr(0, 2) - 0;
      var v_date = str_datetime.substr(3, 2) - 0;
      var v_hour = str_datetime.substr(11, 2) - 0;
      var v_min = str_datetime.substr(14, 2) - 0;
      var v_dtt = new Date(v_year, v_month - 1, v_date, v_hour, v_min, 0, 0);
      return v_dtt.getTime();
    }

    // Utility function that will convert ePoch unix value back to date/time format 'mm/dd/yyyy hh:mi'
    function parse_unixepoch(str_unixepoch) {
      var v_dtt = new Date(str_unixepoch - 0);
      var v_yr = v_dtt.getFullYear();
      var v_mm = v_dtt.getMonth()+1;
      var v_dt = v_dtt.getDate();
      var v_hr = v_dtt.getHours();
      var v_mi = v_dtt.getMinutes();
      // add leading zeros
      if (v_mm < 10) { v_mm = '0'+v_mm;}
      if (v_dt < 10) { v_dt = '0'+v_dt;}
      if (v_hr < 10) { v_hr = '0'+v_hr;}
      if (v_mi < 10) { v_mi = '0'+v_mi;}
      return v_mm + '/' + v_dt + '/' + v_yr + ' ' + v_hr + ':' + v_mi;      
    }

    // Default start time to one hour prior to start time for check in time field 
    // if the check-in time field is empty when check-in date field is on focus.
    $('#event_check_in_time_pick').focus(function(){
      if(!$(this).val().length) {
        // Default from end date.
        $(this).val(parse_unixepoch(parse_datetime($('#event_start_time_pick').val()) - 3600000));
      }
     });

    // JQuery function to assign the value from the event_start_time_pick to Event_event_start_time fields.
    $('#event_form').bind('submit', function(event) {

        // Convert it to Unix epoch format.
        $('#Event_event_start_time').val(parse_datetime($('#event_start_time_pick').val()));
        $('#Event_event_check_in_time').val(parse_datetime($('#event_check_in_time_pick').val()));
    });

</script>
            <hr />
            <footer>
                <p><%= xxtd_DisplayFooter() %></p>
            </footer>
        </div>
    </body>
</html>